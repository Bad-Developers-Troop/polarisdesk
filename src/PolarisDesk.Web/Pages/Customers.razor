@page "/customers"

@attribute [Authorize]
@inject HttpClient Http

@if (currentCustomer == null && customers != null)
{

    <MudTable Items="@customers" Dense="@dense" Hover="@hover" Filter="new Func<Customer,bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Customers</MudText>
            <MudToolBarSpacer />
            <MudTextField @bind-Value="search_string" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Address</MudTh>
            <MudTh>City</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="Address">@context.Address</MudTd>
            <MudTd DataLabel="City">@context.City</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
    @*<MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
        <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>*@
    @*<MudText Inline="true">Selected: @selected_item?.Name</MudText>*@

}

@code
{

    bool dense = false;
    bool hover = true;
    bool fixed_header = false;
    string search_string = "";

    private Customer[] customers;
    private Customer currentCustomer;

    protected override async Task OnInitializedAsync()
    {
        currentCustomer = null;
        await GetCustomers();
    }

    private async Task GetCustomers()
    {
        customers = await Http.GetFromJsonAsync<Customer[]>("https://localhost:44312/api/customers");
    }

    bool FilterFunc(Customer element)
    {
        if (string.IsNullOrWhiteSpace(search_string))
            return true;
        if (element.Name.Contains(search_string))
            return true;
        if (element.Description.Contains(search_string))
            return true;
        return false;
    }


}



